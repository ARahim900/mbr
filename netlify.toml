[build]
  command = "node scripts/netlify-build.cjs"
  publish = "dist"
  ignore = "/bin/false"

[build.environment]
  NODE_VERSION = "20.15.1"
  NPM_VERSION = "10"
  NPM_CONFIG_FUND = "false"
  NPM_CONFIG_AUDIT = "false"
  NPM_CONFIG_LEGACY_PEER_DEPS = "true"
  NODE_OPTIONS = "--max-old-space-size=8192"
  SKIP_PREFLIGHT_CHECK = "true"
  CI = "true"
  NPM_FLAGS = "--legacy-peer-deps"
  NETLIFY_USE_YARN = "false"
  NETLIFY_USE_PNPM = "false"
  # NODE_ENV = "production" # Commented out to ensure devDependencies are installed

# Security and Performance Headers
[[headers]]
  for = "/*"
  [headers.values]
    # Security Headers
    X-Frame-Options = "DENY"
    X-Content-Type-Options = "nosniff"
    X-XSS-Protection = "1; mode=block"
    Referrer-Policy = "strict-origin-when-cross-origin"
    Permissions-Policy = "geolocation=(), microphone=(), camera=(), payment=(), usb=(), magnetometer=(), gyroscope=(), accelerometer=()"
    Strict-Transport-Security = "max-age=31536000; includeSubDomains; preload"
    Content-Security-Policy = "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://cdn.jsdelivr.net https://unpkg.com https://cdnjs.cloudflare.com; style-src 'self' 'unsafe-inline' https://fonts.googleapis.com https://cdn.jsdelivr.net; font-src 'self' https://fonts.gstatic.com https://cdn.jsdelivr.net data:; img-src 'self' data: blob: https: *.githubusercontent.com; connect-src 'self' https://api.github.com wss: ws:; frame-ancestors 'none'; base-uri 'self'; form-action 'self'"
    
    # Performance Headers
    X-Served-By = "Netlify-CDN"
    X-Cache-Status = "MISS"
    Vary = "Accept-Encoding, Accept"
    
    # CORS Headers
    Access-Control-Allow-Origin = "*"
    Access-Control-Allow-Methods = "GET, POST, PUT, DELETE, OPTIONS, HEAD"
    Access-Control-Allow-Headers = "Content-Type, Authorization, X-Requested-With, Accept, Origin"
    Access-Control-Max-Age = "86400"

# Static Assets - Long-term caching with optimization
[[headers]]
  for = "/assets/*"
  [headers.values]
    Cache-Control = "public, max-age=31536000, immutable"
    Expires = "Thu, 31 Dec 2025 23:59:59 GMT"
    X-Asset-Type = "static"
    Vary = "Accept-Encoding"

# JavaScript and CSS files with compression
[[headers]]
  for = "/*.{js,css,mjs}"
  [headers.values]
    Cache-Control = "public, max-age=31536000, immutable"
    Content-Type = "text/javascript; charset=utf-8"
    X-Content-Compressed = "true"

# Font files with CORS support
[[headers]]
  for = "/*.{woff,woff2,ttf,otf,eot}"
  [headers.values]
    Cache-Control = "public, max-age=31536000, immutable"
    Access-Control-Allow-Origin = "*"
    Content-Type = "font/woff2"

# Image files with optimization
[[headers]]
  for = "/*.{jpg,jpeg,png,gif,webp,svg,ico,avif}"
  [headers.values]
    Cache-Control = "public, max-age=2592000"
    Vary = "Accept"
    X-Image-Optimized = "true"

# HTML files - Short caching for updates
[[headers]]
  for = "/*.html"
  [headers.values]
    Cache-Control = "public, max-age=0, must-revalidate"
    X-Content-Type = "text/html; charset=utf-8"

# Service Worker - No caching
[[headers]]
  for = "/sw.js"
  [headers.values]
    Cache-Control = "no-cache, no-store, must-revalidate"
    Service-Worker-Allowed = "/"

# Manifest and config files
[[headers]]
  for = "/*.{json,xml,txt}"
  [headers.values]
    Cache-Control = "public, max-age=86400"

# API routes - No caching
[[headers]]
  for = "/api/*"
  [headers.values]
    Cache-Control = "private, no-cache, no-store, must-revalidate"
    Pragma = "no-cache"
    Expires = "0"

# Redirects for API and SPA routing
[[redirects]]
  from = "/api/*"
  to = "/.netlify/functions/:splat"
  status = 200

[[redirects]]
  from = "/*"
  to = "/index.html"
  status = 200

# Functions configuration with optimization
[functions]
  node_bundler = "esbuild"
  external_node_modules = ["sharp", "canvas"]
  included_files = ["dist/**/*"]

# Plugin configuration for performance
[[plugins]]
  package = "@netlify/plugin-sitemap"

[[plugins]]
  package = "netlify-plugin-cache"
  [plugins.inputs]
    paths = ["node_modules", ".cache"]

# Edge Functions for advanced caching (if available)
[[edge_functions]]
  function = "cache-control"
  path = "/assets/*"
